name: Packaging

on:
  push:
    branches: [ main ]
  pull_request:
    branches: '*'

env:
  PIP_DISABLE_PIP_VERSION_CHECK: 1

defaults:
  run:
    shell: bash -e {0}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install node
      uses: actions/setup-node@v1
      with:
       node-version: '14.x'
    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        architecture: 'x64'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel
        python -m pip install jupyter_packaging~=0.10 "jupyterlab>=3,<4" build setuptools
    - name: Build pypi distributions
      run: |
        python -m build
    - name: Build npm distributions
      run: |
        npm pack
        cp *.tgz dist
    - name: Build checksum file
      run: |
        cd dist
        sha256sum * | tee SHA256SUMS
    - name: Upload distributions
      uses: actions/upload-artifact@v2
      with:
        name: dist ${{ github.run_number }}
        path: ./dist

  install:
    runs-on: ${{ matrix.os }}-latest
    needs: [build]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos, windows]
        python: ['3.7', '3.10']
        include:
          - python: '3.7'
            dist: 'ipylab*.tar.gz'
          - python: '3.10'
            dist: 'ipylab*.whl'
          - os: windows
            py_cmd: python
            pip_cmd: python -m pip
          - os: macos
            py_cmd: python3
            pip_cmd: pip3
          - os: ubuntu
            py_cmd: python
            pip_cmd: python -m pip

    steps:
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
          architecture: 'x64'
      - uses: actions/download-artifact@v2
        with:
          name: dist ${{ github.run_number }}
          path: ./dist
      - name: Install the prerequisites
        run: |
          ${{ matrix.pip_cmd }} install --upgrade pip wheel jupyterlab~=3.0
      - name: Install the package
        run: |
          cd dist
          ${{ matrix.pip_cmd }} install -vv ${{ matrix.dist }}
      - name: Validate environment
        run: |
          ${{ matrix.pip_cmd }} freeze
          ${{ matrix.pip_cmd }} check
      - name: Validate the install
        run: |
          jupyter labextension list
          jupyter labextension list 2>&1 | grep -ie "ipylab.*enabled.*ok" -
